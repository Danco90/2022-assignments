package com.daniele.project.revo;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

public class TestMyDemo
{
    /**
     * 1 - Shorten URL "SEO"
     *
     * Given as input a URL and a SEO keyword with a max length of 20 characters, chosen by the user, generate a SEO URL.
     */
    @Test
    @DisplayName("Test Shorten URL \"SEO\"")
    void test_myMethod1()
    {

//        Input:
//        URL: http://looooong.com/somepath
        String inputUrl = "http://looooong.com/somepath";
      String SEOKey = "MY-NEW-WS";
//        Output:
//        URL: http://short.com/MY-NEW-WS
//
//        Input:
//        URL: http://looooong.net/another/somepath
//        SEO keyword: POTATO
//        Output:
//        URL: http://short.com/POTATO
        Assertions.assertAll(
                () -> Assertions.assertEquals("http://short.com/MY-NEW-WS", new MyDemo().method1(inputUrl,SEOKey )),
                () -> Assertions.assertThrowsExactly(
                        IllegalArgumentException.class,
                        () -> new MyDemo().method1(inputUrl,"POTATOPOTATOPOTATOPOTATO" ))
        );
    }

    /**
     * 2 - Random keyword generation
     *
     * Given a URL as input, generate a short URL with a path made of a random sequence of 4 alphanumeric characters.
     *
     * Example:
     *
     * Input:
     * URL: http://looooong.com/somepath
     * Output:
     * URL: http://short.com/ZfGd
     */
    @Test
    @DisplayName("Test Shorten URL with autogenerated SEO ")
    void test_myMethod2()
    {


        String inputUrl = "http://looooong.com/somepath";
        String url = new MyDemo().method2(inputUrl);
        Assertions.assertAll(
                () -> Assertions.assertEquals(4, url.substring(url.length()-4).length()),
                () -> Assertions.assertTrue(url.substring(url.length()-4).matches("^[a-zA-Z0-9]*$"))
//                () -> Assertions.assertThrowsExactly(
//                        IllegalArgumentException.class,
//                        () -> new MyDemo().method1(inputUrl,))
        );
    }

}
